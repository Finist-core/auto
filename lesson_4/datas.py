"""Типы даненых в питоне:
Numbers (целое число)
String (строка)
Boolean (логический типа True/False)
Float (дробные числа)
List (список)
Dictionary (словарь)
Tuple (кортеж)
Set (множество)

[] - список - изменяемый
() - кортеж - не изменяемый
{} - множество - изменяемый, содержит только уникальные элементы, порядок элементов не закреплен
{} - словарь - 'ключ': 'значение'

print(list[1]) - так можно распечатать второй элемент, кроме множества
"""


#Пример 1 Простой ввод с клавиатуры
user_name = input("What is your name?")
#ввод данных с клавиатуры
print("hello", user_name, "!", sep = " ")

#Пример 2 Узнать тип данных переменной

user_input = input("enter somthing")
print(type(user_input))
#Выведет клас данных переменной

#Пример 3 Изменение типа данных переменной
a = '1'
print(type(a))
a = int(a)
print(type(a))

#Пример 4 Задаём тип данных в переменной сразу
user_input2  = int(input("Please enter a number"))
print("Your number is", user_input2)

#Пример 5 List список. Списки изменяемые
my_list = [1, 3, 7, None, False, 3.2, "Text"]
print(my_list[2]) # Распечатает третий (элемент)
print(my_list[-1]) #Распечатает последний элемент списка
print(my_list[-3]) #Распечатает третий элемент с конца списка
my_list[2] = 42 # Изменение элементов списка
my_list_1 = [] # Создаёт пустой лист
my_list_2 = list() # Создаёт пустой лист
my_list.append("text") # Добавляет в конец списка
my_list.insert(index, element) # Добавляет в список элемент (index - место, element - элемент)
print(len(my_list)) # Посчитает сколько элементов в списке
print(my_list.index(7)) # Скажет под каким номером элемент в списке
my_list.pop(0) # Удаляет элемент из списка (цифра в скобках, индекс элемента)
poped = my_list .pop(1) # Удалит элемент из списка и добавит его в переменную popped
my_list_3 = [1, 2, 3, 4, 5, 6, 7, 1] # Создали список, в котором есть не уникальный элемент
my_list_3 = set(my_list_3) # Преобразовали в множество, удалились одинаковые элементы
my_list_3 = list(my_list_3) # Преобразовали обратно в список, остались только уникальные элементы

# Пример 6 Tuple кортеж. Кортежи не изменяемые. Кортеж с одним элементом, считается числом или строкой или типом, который записан
my_tuple = (1, 3, 7, True, "text") # Можно делать все, что со списками, кроме изменения
print(my_tuple.count(1)) # Посчитает колличество совпадений, сколько 1 в кортеже
print(my_tuple.index(3)) # Найдет индекс 5 в кортеже

# Пример 7 Set множество. Изменяемый. Содержит только не повторяющиеся элементы. Не гарантирует порядок в котором элементы внесены
my_set = {1, 3, 7, None, 'Text', False, 3.3}
print(my_set) # При распечатке, данные будут не в таком порядке, как вносились
              # print(my_set[3]) выдаст ошибку, так как элементы идут рандомно, append так же не работает
              # Данные в множестве уникальны, если два одинаковых элемента, дубликат удаляется
my_set_1 = () # Так создаётся пустое множество, не с {}

#Пример 8 Dictionary словарь. Данные в словаре - это пары ключ: значение
# Ключом могут быть только неизменяемые типы данных
my_dict = {'one': 'value', 'two': 'value2'}
print(my_dict['one']) # Распечатает значение из one
my_dict['one'] = 'new_value' # Так можно заменить значение в ключе
my_dict['three'] = 'added_value' # Так можно добавить ключ и значение в словарь
my_dict['four'] = True # Можно булевое значение
my_dict['five'] = [1, 3, 5] # Можно листы, сеты, кортежи

print(my_dict.keys()) # Распечатать все ключи словаря
print(my_dict.values()) # Распечатать все значения словаря
print(my_dict.items()) # Распечатать все пары ключ: значение